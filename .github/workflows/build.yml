name: Build
on:
    push:
      branches: [ master ]

env:
  FLUTTER_CHANNEL: "stable"

jobs:
    build:    
        runs-on: ${{ matrix.os }}

        strategy:
          matrix:
            os: [ ubuntu-latest ]
            target: [ web, linux ]
            include:
              - os: windows-latest
                target: windows

        name: Build for ${{ matrix.target }}

        steps:
          - name: Set build path for UNIX-likes
            if: matrix.target != 'windows'
            run: |
              case "${{ matrix.target }}" in
                linux)
                    echo "build/linux/x64/release/bundle" >> $BUILD_PATH
                    ;;

                web)
                    echo "build/web" >> $BUILD_PATH
                    ;;
              esac

          - name: Set build path for windows
            if: matrix.target == 'windows'
            run: echo "BUILD_PATH=build/windows/runner/Release" >> $env:GITHUB_ENV

          - uses: subosito/flutter-action@v2
            with:
              channel: "$FLUTTER_CHANNEL"

          - name: Checkout code
            uses: actions/checkout@v3

          - name: Fetch dependencies
            run: flutter pub get

          - name: Install Linux requirements
            if: matrix.target == 'linux'
            run: sudo apt install clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev

          - name: Build for ${{ matrix.target }}
            run: flutter build ${{ matrix.target }}

          - name: Upload ${{ matrix.target }} artifact
            uses: actions/upload-artifact@v2
            with:
                name: foreplay-${{ matrix.target }}
                path: "$BUILD_PATH"